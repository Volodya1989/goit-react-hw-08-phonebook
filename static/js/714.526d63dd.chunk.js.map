{"version":3,"file":"static/js/714.526d63dd.chunk.js","mappings":"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","sources":["components/App/App.styled.js","components/ContactForm/ContactForm.styled.js","redux/phonebook/selectors.js","components/ContactForm/ContactForm.js","components/ContactListItem/ContactListItem.styled.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","pages/Main.js"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\n  display: block;\n  text-align: center;\n  width: 700px;\n  margin-right: auto;\n  margin-left: auto;\n  padding: 30px;\n`;\n\nexport const Name = styled.input`\n  width: 300px;\n`;\n\nexport const Phonebook = styled.div`\n  box-shadow: rgba(0, 0, 0, 0.19) 0px 10px 20px, rgba(0, 0, 0, 0.23) 0px 6px 6px;\n  border-radius: 10px;\n  padding: 20px;\n  background: linear-gradient(to bottom right, #f5f7fa, #b8c6db);\n`;\n\nexport const Contacts = styled.div`\n  box-shadow: rgba(0, 0, 0, 0.19) 0px 10px 20px, rgba(0, 0, 0, 0.23) 0px 6px 6px;\n  border-radius: 10px;\n  padding: 20px;\n  background: linear-gradient(to bottom right, #fffcff, #d5fefd);\n  margin-top: 50px;\n`;\n","import styled from \"@emotion/styled\";\n\nexport const Form = styled.form`\n  display: block;\n`;\n\nexport const Input = styled.input`\n  font-family: \"Roboto\", sans-serif;\n  color: #333;\n  font-size: 1.2rem;\n  margin: 0 auto;\n  padding: 0.5rem 2rem;\n  border-radius: 0.5rem;\n  background-color: rgb(255, 255, 255);\n  border: 0.5px solid lightgray;\n  width: 300px;\n  display: block;\n  outline: none;\n  transition: all 0.3s;\n\n  &:focus {\n    border-color: black;\n  }\n`;\n\nexport const Label = styled.label`\n  font-family: \"Roboto\", sans-serif;\n  font-size: 1.2rem;\n  margin-top: 0.7rem;\n  display: inline-block;\n  text-align: left;\n  transition: all 0.3s;\n  transform: translateY(0rem);\n`;\n\nexport const Button = styled.button`\n   text-transform: capitalize;\n  background: linear-gradient(to bottom right, #009FFD, #2A2A72);\n  border: 0;\n  display:block;\n  border-radius: 12px;\n  color: #FFFFFF;\n  cursor: pointer;\n  margin-left:auto;\n  margin-right:auto;\n  margin-top:20px;\n  font-family: -apple-system,system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif;\n  font-size: 12px;\n  font-weight: 500;\n  line-height: 2.5;\n  outline: transparent;\n  padding: 0 1rem;\n  text-align: center;\n  text-decoration: none;\n  transition: box-shadow .2s ease-in-out;\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n  white-space: nowrap;\n  &:not([disabled]):focus {\n  box-shadow: 0 0 .15rem rgba(0, 0, 0, 0.5), -.125rem -.125rem 1rem #009FFD, .125rem .125rem 0.5rem #2A2A72;\n}\n&:not([disabled]):hover {\n  box-shadow: 0 0 .15rem rgba(0, 0, 0, 0.5), -.125rem -.125rem 1rem #009FFD, .125rem .125rem 0.5rem #2A2A72;\n}\n}\n`;\n","export const getContacts = (state) => state.contacts;\nexport const getFilter = (state) => state.filter;\nexport const selectLoading = (state) => state.tasks.loading;\n","import { Input, Label, Button } from \"./ContactForm.styled\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addContact } from \"redux/phonebook/operations\";\nimport { getContacts } from \"redux/phonebook/selectors\";\nimport Notiflix from \"notiflix\";\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const { items } = useSelector(getContacts);\n\n  const handleOnSubmit = (e) => {\n    e.preventDefault();\n    const { name, number } = e.target.elements;\n    const isPresentOnList = items.find(\n      (contact) => contact.name.toLowerCase() === name.value.toLowerCase()\n    );\n    if (isPresentOnList) {\n      Notiflix.Notify.failure(`${name.value} is already in your contacts.`);\n    } else {\n      Notiflix.Notify.success(`${name.value} ADDED to your contact list.`);\n      dispatch(addContact({ name: name.value, number: number.value }));\n    }\n\n    e.target.reset();\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleOnSubmit}>\n        <Label>\n          Name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan.\"\n            required\n          />\n        </Label>\n        <Label>\n          Number\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </Label>\n        <Button type=\"submit\">Add contact</Button>\n      </form>\n    </div>\n  );\n};\n\nexport default ContactForm;\n","import styled from \"@emotion/styled\";\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: auto;\n  margin-left: auto;\n  font: 200 20px/1.5 Helvetica, Verdana, sans-serif;\n  border-bottom: 1px solid #ccc;\n  box-shadow: rgba(50, 50, 93, 0.25) 0px 50px 100px -20px,\n    rgba(0, 0, 0, 0.3) 0px 30px 60px -30px;\n  transition: transform 0.4s;\n\n  &:hover {\n    transition: transform 0.4s;\n    transform: scale(1.05);\n    background: linear-gradient(to bottom right, #e8dbfc, #f8f9d2);\n  }\n`;\nexport const Text = styled.p`\n  display: flex;\n  align-items: center;\n  margin-left: 10px;\n  font-weight: 500;\n  text-transform: capitalize;\n`;\n\nexport const Span = styled.span`\n  display: flex;\n  margin-right: 10px;\n`;\n\nexport const Phone = styled.span`\n  display: block;\n  margin-left: 5px;\n`;\n\nexport const List = styled.ul`\n  padding-right: 40px;\n`;\n\nexport const DeleteBtn = styled.button`\n   text-transform: capitalize;\n  background: linear-gradient(to bottom right, #FF0000, #FF7878);\n  border: 0;\n  display:block;\n  border-radius: 12px;\n  width:100px;\n  color: #FFFFFF;\n  cursor: pointer;\n  margin-left:auto;\n  margin-right:20px;\n  font-family: -apple-system,system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif;\n  font-size: 12px;\n  font-weight: 500;\n  line-height: 2.5;\n  outline: transparent;\n  padding: 0 1rem;\n  text-align: center;\n  text-decoration: none;\n  transition: box-shadow .2s ease-in-out;\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n  white-space: nowrap;\n  &:not([disabled]):focus {\n  box-shadow: 0 0 .15rem rgba(0, 0, 0, 0.5), -.125rem -.125rem 1rem #FF0000, .125rem .125rem 0.5rem #FF7878;\n}\n&:not([disabled]):hover {\n  box-shadow: 0 0 .15rem rgba(0, 0, 0, 0.5), -.125rem -.125rem 1rem #FF0000, .125rem .125rem 0.5rem #FF7878;\n}\n}\n`;\n","import PropTypes from \"prop-types\";\nimport { DeleteBtn, Item, Text, Span, Phone } from \"./ContactListItem.styled\";\nimport { CiFaceSmile } from \"react-icons/ci\";\n\nconst ContactListItem = ({ number, name, onDelete }) => {\n  return (\n    <Item>\n      <Text>\n        <Span>\n          <CiFaceSmile />\n        </Span>\n        {name}: <Phone>{number}</Phone>\n      </Text>\n\n      <DeleteBtn type=\"button\" onClick={() => onDelete()}>\n        Delete\n      </DeleteBtn>\n    </Item>\n  );\n};\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\nexport default ContactListItem;\n","import styled from \"@emotion/styled\";\n\nexport const List = styled.ul`\n  padding-right: 40px;\n  margin-left: 10px;\n`;\n\nexport const Text = styled.p`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 25px;\n  margin-left: auto;\n  margin-right: auto;\n  box-shadow: rgba(50, 50, 93, 0.25) 0px 50px 100px -20px,\n    rgba(0, 0, 0, 0.3) 0px 30px 60px -30px;\n  background: linear-gradient(to bottom right, #e8dbfc, #f8f9d2);\n  height: 40px;\n  text-align: center;\n  width: 50%;\n  font-weight: 700;\n  border-radius: 20px;\n  padding-left: 20px;\n  padding-right: 20px;\n  padding-bottom: 5px;\n  padding-top: 5px;\n`;\nexport const Span = styled.span`\n  display: flex;\n  align-items: center;\n  margin-right: 10px;\n`;\n","import { getContacts } from \"redux/phonebook/selectors\";\nimport ContactListItem from \"components/ContactListItem\";\nimport { List, Text, Span } from \"./ContactList.styled\";\nimport { FcContacts } from \"react-icons/fc\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteContact } from \"redux/phonebook/operations\";\nimport { useSelector } from \"react-redux/es/hooks/useSelector\";\nimport { getFilter } from \"redux/phonebook/selectors\";\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const { items, isLoading, error } = useSelector(getContacts);\n\n  const filter = useSelector(getFilter);\n\n  const filteredContacts = items.filter((contact) =>\n    contact.name.toLowerCase().includes(filter.toLocaleLowerCase().trim())\n  );\n\n  return (\n    <List>\n      {isLoading && <b>Loading tasks...</b>}\n      {error && <b>{error}</b>}\n      {filteredContacts.length > 0 ? (\n        filteredContacts.map(({ name, number, id }) => {\n          return (\n            <ContactListItem\n              key={id}\n              name={name}\n              number={number}\n              onDelete={() => dispatch(deleteContact(id))}\n            />\n          );\n        })\n      ) : (\n        <Text>\n          <Span>\n            <FcContacts />\n          </Span>\n          No contacts listed\n        </Text>\n      )}\n    </List>\n  );\n};\n\nexport default ContactList;\n","import styled from \"@emotion/styled\";\n\n\n\nexport const Input = styled.input`\n  font-family: \"Roboto\", sans-serif;\n  color: #333;\n  font-size: 1.2rem;\n  margin: 0 auto;\n  padding: 0.5rem 2rem;\n  border-radius: 0.5rem;\n  background-color: rgb(255, 255, 255);\n  border: 0.5px solid lightgray;\n  width: 250px;\n  display: flex;\n  outline: none;\n  transition: all 0.3s;\n\n  &:focus {\n    border-color: black;\n  }\n`;\n\nexport const Label = styled.label`\n  font-family: \"Roboto\", sans-serif;\n  font-size: 1.2rem;\n  margin-top: 0.7rem;\n  display: inline-block;\n  text-align: left;\n  transition: all 0.3s;\n  transform: translateY(0rem);\n`;\n\n","import { Input, Label } from \"./Filter.styled\";\nimport { useDispatch } from \"react-redux\";\nimport { setFilter } from \"redux/phonebook/filterSlice\";\nimport { useSelector } from \"react-redux/es/hooks/useSelector\";\nimport { getFilter } from \"redux/phonebook/selectors\";\n\nconst Filter = () => {\n  const filter = useSelector(getFilter);\n\n  const dispatch = useDispatch();\n  const changeFilter = (e) => {\n    dispatch(setFilter(e.currentTarget.value));\n  };\n  return (\n    <Label>\n      Find contacts by name\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={changeFilter}\n        required\n      />\n    </Label>\n  );\n};\n\nexport default Filter;\n","// Separate named imports, this makes the code more readable\nimport { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { fetchContacts } from \"redux/phonebook/operations\";\nimport { Container, Phonebook, Contacts } from \"components/App/App.styled\";\nimport ContactForm from \"components/ContactForm\";\nimport ContactList from \"components/ContactList\";\nimport Filter from \"components/Filter\";\n\nconst Main = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <Container>\n      <Phonebook>\n        <h1>Phonebook</h1>\n        <ContactForm />\n      </Phonebook>\n      <Contacts>\n        <h1>Contacts</h1>\n\n        <Filter />\n        <ContactList />\n      </Contacts>\n    </Container>\n  );\n};\n\nexport default Main;\n"],"names":["Container","styled","div","_templateObject","_taggedTemplateLiteral","Phonebook","input","_templateObject2","_templateObject3","Contacts","_templateObject4","Input","form","Label","label","Button","button","getContacts","state","contacts","getFilter","filter","dispatch","useDispatch","items","useSelector","_jsx","children","_jsxs","onSubmit","e","preventDefault","_e$target$elements","target","elements","name","number","find","contact","toLowerCase","value","Notiflix","failure","concat","success","addContact","reset","type","pattern","title","required","Item","li","Text","p","Span","span","Phone","DeleteBtn","ul","_templateObject5","_templateObject6","_ref","onDelete","CiFaceSmile","onClick","List","_useSelector","isLoading","error","filteredContacts","includes","toLocaleLowerCase","trim","length","map","id","ContactListItem","deleteContact","FcContacts","onChange","setFilter","currentTarget","useEffect","fetchContacts","ContactForm","Filter","ContactList"],"sourceRoot":""}